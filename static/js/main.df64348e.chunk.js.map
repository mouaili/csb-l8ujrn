{"version":3,"sources":["Client.jsx","ClientForm.jsx","index.js"],"names":["Client","_ref","details","onDelete","react_default","a","createElement","nom","onClick","id","ClientForm","state","nouveauClient","handleChange","event","_this","setState","currentTarget","value","handleSubmit","preventDefault","Date","getTime","props","onClientAdd","onSubmit","this","onChange","type","placeholder","Component","App","clients","handleDelete","Object","toConsumableArray","index","findIndex","client","splice","handleAdd","push","_this2","map","src_Client","key","src_ClientForm","React","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"mMAQeA,EANA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAZ,OACbC,EAAAC,EAAAC,cAAA,UACGJ,EAAQK,IADX,IACgBH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAML,EAASD,EAAQO,MAAxC,gdCiCHC,oMAlCbC,MAAQ,CACNC,cAAe,MAGjBC,aAAe,SAAAC,GACbC,EAAKC,SAAS,CAAEJ,cAAeE,EAAMG,cAAcC,WAGrDC,aAAe,SAAAL,GACbA,EAAMM,iBAEN,IAAMX,GAAK,IAAIY,MAAOC,UAChBf,EAAMQ,EAAKJ,MAAMC,cAEvBG,EAAKQ,MAAMC,YAAY,CAAEf,KAAIF,QAE7BQ,EAAKC,SAAS,CAAEJ,cAAe,kDAGjC,WACE,OACER,EAAAC,EAAAC,cAAA,QAAMmB,SAAUC,KAAKP,cACnBf,EAAAC,EAAAC,cAAA,SACEY,MAAOQ,KAAKf,MAAMC,cAClBe,SAAUD,KAAKb,aACfe,KAAK,OACLC,YAAY,sBAEdzB,EAAAC,EAAAC,cAAA,mCA7BiBwB,4dCKnBC,oMACJpB,MAAQ,CACNqB,QAAS,CACP,CAAEvB,GAAI,EAAGF,IAAK,eACd,CAAEE,GAAI,EAAGF,IAAK,iBACd,CAAEE,GAAI,EAAGF,IAAK,qBAIlB0B,aAAe,SAAAxB,GACb,IAAMuB,EAAOE,OAAAC,EAAA,EAAAD,CAAOnB,EAAKJ,MAAMqB,SACzBI,EAAQJ,EAAQK,UAAU,SAAAC,GAAM,OAAIA,EAAO7B,KAAOA,IAExDuB,EAAQO,OAAOH,EAAO,GAEtBrB,EAAKC,SAAS,CAAEgB,eAGlBQ,UAAY,SAAAF,GACV,IAAMN,EAAOE,OAAAC,EAAA,EAAAD,CAAOnB,EAAKJ,MAAMqB,SAC/BA,EAAQS,KAAKH,GAEbvB,EAAKC,SAAS,CAAEgB,yDAGlB,WAAS,IAAAU,EAAAhB,KAGP,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAJU,qBAKVF,EAAAC,EAAAC,cAAA,UACGoB,KAAKf,MAAMqB,QAAQW,IAAI,SAAAL,GAAM,OAC5BlC,EAAAC,EAAAC,cAACsC,EAAD,CACEC,IAAKP,EAAO7B,GACZP,QAASoC,EACTnC,SAAUuC,EAAKT,kBAIrB7B,EAAAC,EAAAC,cAACwC,EAAD,CAAYtB,YAAaE,KAAKc,oBAxCpBO,IAAMjB,WA8ClBkB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASL","file":"static/js/main.df64348e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Client = ({ details, onDelete }) => (\r\n  <li>\r\n    {details.nom} <button onClick={() => onDelete(details.id)}>X</button>\r\n  </li>\r\n);\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ClientForm extends Component {\r\n  state = {\r\n    nouveauClient: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ nouveauClient: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const id = new Date().getTime();\r\n    const nom = this.state.nouveauClient;\r\n\r\n    this.props.onClientAdd({ id, nom });\r\n\r\n    this.setState({ nouveauClient: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          value={this.state.nouveauClient}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          placeholder=\"Ajouter un client\"\r\n        />\r\n        <button>Confirmer</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientForm;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Client from \"./Client\";\nimport ClientForm from \"./ClientForm\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    clients: [\n      { id: 1, nom: \"Lior Chamla\" },\n      { id: 2, nom: \"Magali Pernin\" },\n      { id: 3, nom: \"Joseph Durand\" }\n    ]\n  };\n\n  handleDelete = id => {\n    const clients = [...this.state.clients];\n    const index = clients.findIndex(client => client.id === id);\n\n    clients.splice(index, 1);\n\n    this.setState({ clients });\n  };\n\n  handleAdd = client => {\n    const clients = [...this.state.clients];\n    clients.push(client);\n\n    this.setState({ clients });\n  };\n\n  render() {\n    const title = \"Liste des clients\";\n\n    return (\n      <div>\n        <h1>{title}</h1>\n        <ul>\n          {this.state.clients.map(client => (\n            <Client\n              key={client.id}\n              details={client}\n              onDelete={this.handleDelete}\n            />\n          ))}\n        </ul>\n        <ClientForm onClientAdd={this.handleAdd} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}